version: '3.7'
x-environment:
  &default-environment
  - REDIS_HOST=redis
  - REDIS_PORT=6379
  - REDIS_PASSWORD=$REDIS_PASSWORD
  - MONGO_HOST=mongo
  - MONGO_PASS=admin
  - MONGODB=mongo:27017
  - ACCESS_SECRET=98hbun98hsdfsdwesdfs
  - REFRESH_SECRET=786dfdbjhsbsdfsdfsdf

services:
  traefik:
    image: traefik:v2.6
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  auth:
    image: explabs/potee-auth
    container_name: "auth"
    environment: *default-environment
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=PathPrefix(`/auth`)"
      - "traefik.http.routers.auth.entrypoints=web"
      - "traefik.http.middlewares.auth-strip.stripprefix.prefixes=/auth"
      - "traefik.http.middlewares.auth-strip.stripprefix.forceslash=true"
      - "traefik.http.routers.auth.middlewares=auth-strip"
      - "traefik.http.services.auth.loadbalancer.server.port=8080"
  team:
    image: explabs/potee-team
    container_name: "team"
    environment: *default-environment
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.team.rule=PathPrefix(`/team`)"
      - "traefik.http.routers.team.entrypoints=web"
      - "traefik.http.middlewares.team-strip.stripprefix.prefixes=/team"
      - "traefik.http.middlewares.team-strip.stripprefix.forceslash=true"
      - "traefik.http.routers.team.middlewares=team-strip"
      - "traefik.http.services.team.loadbalancer.server.port=8080"

  admin:
    image: explabs/potee-admin
    container_name: "admin"
    environment:
      - ADMIN_PASS=admin
      - MONGO_HOST=mongo
      - MONGO_PASS=admin
      - REDIS_HOST=redis
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - ACCESS_SECRET=98hbun98hsdfsdwesdfs
      - MINIO_HOST=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin.rule=PathPrefix(`/admin`)"
      - "traefik.http.routers.admin.entrypoints=web"
      - "traefik.http.middlewares.admin-strip.stripprefix.prefixes=/admin"
      - "traefik.http.middlewares.admin-strip.stripprefix.forceslash=true"
      - "traefik.http.routers.admin.middlewares=admin-strip"
      - "traefik.http.services.admin.loadbalancer.server.port=8080"
    depends_on:
      - minio
    volumes:
      - ./scenario.yml:/usr/app/scenario.yml
      - ./test.py:/usr/app/scripts/test.py

  manager:
    image: explabs/potee-manager
    container_name: "manager"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin
      - MONGO_HOST=mongo
      - MONGO_PASS=admin
      - REDIS_HOST=redis
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - ACCESS_SECRET=98hbun98hsdfsdwesdfs
      - PYTHONUNBUFFERED=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.manager.rule=PathPrefix(`/scenario`)"
      - "traefik.http.routers.manager.entrypoints=web"
      - "traefik.http.middlewares.manager-strip.stripprefix.prefixes=/scenario"
      - "traefik.http.middlewares.manager-strip.stripprefix.forceslash=true"
      - "traefik.http.routers.manager.middlewares=manager-strip"
      - "traefik.http.services.manager.loadbalancer.server.port=8000"
    depends_on:
      - rabbitmq

  runner:
    image: explabs/potee-runner
    container_name: "runner"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin
    depends_on:
      - rabbitmq
    volumes:
      - ./test.py:/usr/app/test.py

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
  minio:
    image: quay.io/minio/minio
    container_name: "minio"
    command: server --console-address ":9001" /data
    expose:
      - "9000"
      - "9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3

  redis:
    image: "redis:alpine"
    container_name: "redis"
    command: 'redis-server --requirepass ${REDIS_PASSWORD}'
    ports:
      - "6379:6379"

  mongo:
    image: mongo:5.0
    container_name: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=$ADMIN_PASS
    ports:
      - "27017:27017"
